<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingyun.asset.mapper.AssetHouseBlockMapper">

    <resultMap type="com.mingyun.asset.domain.AssetHouseBlock" id="AssetHouseBlockResult">
        <result property="id"    column="id"    />
        <result property="code"    column="code"    />
        <result property="name"    column="name"    />
        <result property="address"    column="address"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectAssetHouseBlockVo">
        select id, code, name, address, remark, create_time, create_by, update_time, update_by from asset_house_block
    </sql>

    <select id="selectAssetHouseBlockList" parameterType="com.mingyun.asset.domain.AssetHouseBlock" resultMap="AssetHouseBlockResult">
        <include refid="selectAssetHouseBlockVo"/>
        <where>
            <if test="code != null  and code != ''"> and code like concat('%', #{code}, '%')</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="address != null  and address != ''"> and address like concat('%', #{address}, '%')</if>
            <if test="remark != null  and remark != ''"> and remark like concat('%', #{remark}, '%')</if>
        </where>
    </select>

    <select id="selectAssetHouseBlockById" parameterType="Long" resultMap="AssetHouseBlockResult">
        <include refid="selectAssetHouseBlockVo"/>
        where id = #{id}
    </select>

    <insert id="insertAssetHouseBlock" parameterType="com.mingyun.asset.domain.AssetHouseBlock" useGeneratedKeys="true" keyProperty="id">
        insert into asset_house_block
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null and code != ''">code,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null and code != ''">#{code},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
        </trim>
    </insert>

    <update id="updateAssetHouseBlock" parameterType="com.mingyun.asset.domain.AssetHouseBlock">
        update asset_house_block
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">code = #{code},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAssetHouseBlockById" parameterType="Long">
        delete from asset_house_block where id = #{id}
    </delete>

    <delete id="deleteAssetHouseBlockByIds" parameterType="String">
        delete from asset_house_block where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>